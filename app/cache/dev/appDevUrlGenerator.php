<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'back_office_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\IndexController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin-profil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::profilAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/admin-profil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-hebergement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\HebergementController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-heb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-hebergement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\HebergementController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/list-heb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view-hebergement' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\HebergementController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/view-heb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notifier-hebergement' => array (  0 =>   array (    0 => 'id',    1 => 'client',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\HebergementController::notifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/platform/notifier-heb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-hebergement' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\HebergementController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-heb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-hebergement' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\HebergementController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-heb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ProjetController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'encours-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ProjetController::encoursAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/encours-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ProjetController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ProjetController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ProjetController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/view-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messages-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ProjetController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/messages-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messages-notification' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\NotificationController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/messages-notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fichiers-notification' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\NotificationController::fichiersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/fichiers-notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/add-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affect-collaborateur' => array (  0 =>   array (    0 => 'id',    1 => 'tache',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::affectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tache',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/platform/affect-collab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'desaffect-collaborateur' => array (  0 =>   array (    0 => 'id',    1 => 'tache',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::desaffectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tache',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/platform/desaffect-collab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/view-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messages-taches' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TacheController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/messages-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-depense' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\DepenseController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/add-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-depense' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\DepenseController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-depense' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\DepenseController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-tranche' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TrancheController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/add-tranche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-tranche' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TrancheController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-tranche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-tranche' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TrancheController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-tranche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-client' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ClientController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-client' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ClientController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show-client' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ClientController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/show-client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-client' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ClientController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-client' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\ClientController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-collaborateur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-collaborateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-collaborateur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-collaborateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-collaborateur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-collaborateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-collaborateur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-collaborateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reset-collaborateur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/reset-collaborateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'view-collaborateur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\CollaborateurController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/view-collaborateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-poste-col' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\PosteCollaborateurController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-poste-col',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-poste-col' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\PosteCollaborateurController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-poste-col',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-poste-col' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\PosteCollaborateurController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-poste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-poste-col' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\PosteCollaborateurController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-poste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-type-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeProjetController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/platform/add-type-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-type-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeProjetController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-type-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-type-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeProjetController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-type-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-type-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeProjetController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-type-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-statut-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\StatutProjetController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-statut-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-statut-projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\StatutProjetController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-statut-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-statut-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\StatutProjetController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-statut-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-statut-tache' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\StatutTacheController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-statut-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-statut-tache' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\StatutTacheController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-statut-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-statut-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\StatutTacheController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-statut-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter-type-depense' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeDepenseController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/add-type-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liste-type-depense' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeDepenseController::listerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/liste-type-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-type-depense' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeDepenseController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/edit-type-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete-type-depense' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BackOfficeBundle\\Controller\\TypeDepenseController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/delete-type-depense',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'backlogin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'backlogin_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'backlogout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'front_office_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'detail-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\TacheController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/collaborateur/view-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit-profil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\CollaborateurController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/edit-profil/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'detail-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\ProjetController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/collaborateur/view-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'msg-projet' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\ProjetController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/collaborateur/messages-projet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messages-tache' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\TacheController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/collaborateur/message-tache',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification-collaborateur-message' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\NotificationController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/messages-notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'taches-en-cours' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\NotificationController::tachesencoursAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/taches-notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification-collaborateur-fichier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FrontOfficeBundle\\Controller\\NotificationController::fichiersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/fichier-notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frontlogin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\SecurityController::cloginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frontlogin_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'frontlogout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/collaborateur/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
